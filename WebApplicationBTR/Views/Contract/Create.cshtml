@model WebApplicationBTR.Models.Contract

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Договор</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                <p>Номер договора</p>          
                @Html.EditorFor(model => model.ContractNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <p>Цена</p>
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>      
        <div class="form-group">
            <div class="col-md-10">
                <p>Тип договора</p>
                <!--<input type="text" name="ProductType" class="form-control" />-->
                @Html.DropDownListFor(model => model.ProductType.Name, ViewData as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductType.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <p>Организация</p>
                
                @Html.DropDownListFor(model => model.Person.Organization.Name, ViewData as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Person.Organization.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <p>Сотрудник</p>
                
                @Html.EditorFor(model=> model.Person.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Person.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/scripts/jquery.unobtrusive-ajax.min.js")


    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js">
        $(function () {
            $("#selectOrg").change(function () {
                RefreshPeople();
            });
            function RefreshPeople() {
                $ajax({
                    url: "/Create/RefreshPeopleByOrganization",
                    UpdateTargetId: "people",
                    type: "POST",
                    data: "id=selectOrg",
                    InsertionMode = InsertionMode.Replace,
                    dataType: "json",
                    success: successFunc,
                    error: errorFunc

                });
            }
        });
        function successFunc(data, status) {
            alert(data);
        }

        function errorFunc(errorData) {
            alert('Ошибка' + errorData.responseText);
        }
    </script>
}
